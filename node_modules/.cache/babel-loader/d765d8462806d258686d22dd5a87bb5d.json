{"ast":null,"code":"var _jsxFileName = \"/Users/vmartins/graneet-react/src/components/CitiesSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, SearchBar, CitiesMetropolis, OverseasCities, SearchTitle, SearchInput, CitiesTitle, OvereasTitle } from './CitiesElements';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CitiesSearch = () => {\n  _s();\n\n  const [datas, setDatas] = useState([]);\n  const [searchData, setSearchData] = useState('');\n\n  const handleChange = e => {\n    setSearchData(e.target.value);\n    if (e.target.value === '') setDatas([]);else {\n      axios({\n        method: \"get\",\n        url: \"http://localhost:8080/cities/all\",\n        params: {\n          data: e.target.value\n        }\n      }).then(response => setDatas(response.data));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      children: [/*#__PURE__*/_jsxDEV(SearchTitle, {\n        children: \"Je recherche... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        type: \"text\",\n        onChange: handleChange,\n        value: searchData,\n        id: \"search\",\n        placeholder: \" ...une ville, un code postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CitiesMetropolis, {\n      children: [/*#__PURE__*/_jsxDEV(CitiesTitle, {\n        children: \" villes de metropole\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), console.log(datas), datas.map((city, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: city.nomCommune\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OverseasCities, {\n      children: /*#__PURE__*/_jsxDEV(OvereasTitle, {\n        children: \"ville d'outre-mer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CitiesSearch, \"bsSJLw2qXmxTIq9kofj52oZf5Ew=\");\n\n_c = CitiesSearch;\nexport default CitiesSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"CitiesSearch\");","map":{"version":3,"sources":["/Users/vmartins/graneet-react/src/components/CitiesSearch.js"],"names":["React","useState","Container","SearchBar","CitiesMetropolis","OverseasCities","SearchTitle","SearchInput","CitiesTitle","OvereasTitle","axios","CitiesSearch","datas","setDatas","searchData","setSearchData","handleChange","e","target","value","method","url","params","data","then","response","console","log","map","city","index","nomCommune"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,gBAA9B,EAAgDC,cAAhD,EAA+DC,WAA/D,EAA2EC,WAA3E,EAAuFC,WAAvF,EAAmGC,YAAnG,QAAsH,kBAAtH;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,UAAD,EAAYC,aAAZ,IAA6Bd,QAAQ,CAAC,EAAD,CAA3C;;AACA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAvB,EACIN,QAAQ,CAAC,EAAD,CAAR,CADJ,KAEK;AACDH,MAAAA,KAAK,CAAC;AACFU,QAAAA,MAAM,EAAE,KADN;AAEFC,QAAAA,GAAG,EAAE,kCAFH;AAGFC,QAAAA,MAAM,EAAE;AAACC,UAAAA,IAAI,EAAEN,CAAC,CAACC,MAAF,CAASC;AAAhB;AAHN,OAAD,CAAL,CAIGK,IAJH,CAISC,QAAD,IAAcZ,QAAQ,CAACY,QAAQ,CAACF,IAAV,CAJ9B;AAKH;AACJ,GAXD;;AAaA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,SAAD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,QAAQ,EAAEP,YAFX;AAGC,QAAA,KAAK,EAAEF,UAHR;AAIC,QAAA,EAAE,EAAC,QAJJ;AAKC,QAAA,WAAW,EAAC;AALb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,gBAAD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKY,OAAO,CAACC,GAAR,CAAYf,KAAZ,CAFL,EAGIA,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACvB,4BAAO;AAAA,oBAAgBD,IAAI,CAACE;AAArB,WAAQD,KAAR;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAkBI,QAAC,cAAD;AAAA,6BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAxCD;;GAAMnB,Y;;KAAAA,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react'\nimport {Container, SearchBar, CitiesMetropolis, OverseasCities,SearchTitle,SearchInput,CitiesTitle,OvereasTitle} from './CitiesElements'\nimport axios from 'axios'\n\nconst CitiesSearch = () => {\n    const [datas, setDatas] = useState([])\n    const [searchData,setSearchData] = useState('')\n    const handleChange = (e) => {\n        setSearchData(e.target.value)\n        if (e.target.value === '')\n            setDatas([])\n        else {\n            axios({\n                method: \"get\",\n                url: \"http://localhost:8080/cities/all\",\n                params: {data: e.target.value},\n            }).then((response) => setDatas(response.data));\n        }\n    }\n\n    return (\n        <Container>\n            <SearchBar>\n                <SearchTitle>Je recherche... </SearchTitle>\n                <SearchInput \n                 type=\"text\"\n                 onChange={handleChange}\n                 value={searchData}\n                 id=\"search\"\n                 placeholder=\" ...une ville, un code postal\"\n                />\n            </SearchBar>\n            <CitiesMetropolis>\n                <CitiesTitle> villes de metropole</CitiesTitle>\n                {console.log(datas)}\n               {datas.map((city,index) => {\n                   return <p key={index}>{city.nomCommune}</p>\n               })}\n            </CitiesMetropolis>\n            <OverseasCities>\n                <OvereasTitle>ville d&apos;outre-mer</OvereasTitle>\n            </OverseasCities>\n        </Container>\n    )\n}\n\nexport default CitiesSearch\n"]},"metadata":{},"sourceType":"module"}